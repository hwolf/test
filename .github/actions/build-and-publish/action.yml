name: Build
description: 'Build and publish the project'
inputs:
  release:
    type: choice
    options:
      - none
      - snapshot
      - final
    required: true
    description: 'Publish to GitHub Packages and create a GitHub Release'
  token:
    required: true
    description: 'GitHub token'
runs:
  using: composite
  steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Set version
      if: ${{ inputs.release != 'final' }}
      shell: bash
      run: |
        base="$(mvn help:evaluate -Dexpression=project.parent.version -q -DforceStdout)"
        version="$base-$(date "+%Y%m%d-%H%M%S")" >> "$GITHUB_ENV"
        echo "version=$version" >> "$GITHUB_ENV"
    - name: Set version
      if: ${{ inputs.release == 'final' }}
      shell: bash
      run: |
        base="$(mvn help:evaluate -Dexpression=project.parent.version -q -DforceStdout)"
        version="$(git tag --sort=-v:refname | grep v$base | head -n 1)"
        version="${version:-v$base-0}"
        version="${version%%-*}-$(expr ${version#*} + 1)"
        echo "version=$version" >> "$GITHUB_ENV"
    - name: Build
      shell: bash
      run: mvn --batch-mode --update-snapshots verify -Drevision="${{ env.version }}"
    - name: Publish to GitHub Packages
      if: ${{ inputs.release != 'none' }}
      shell: bash
      run: mvn --batch-mode deploy -Drevision="${{ env.version }}"
      env:
        GITHUB_TOKEN: "${{ inputs.token }}"
    - name: Publish GitHub Release
      if: ${{ inputs.release == 'final' }}
      shell: bash
      run: gh release create ${{ format('v{0}', env.version) }}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
    - name: Upload Build Reports
      shell: bash
      #uses: actions/upload-artifact@v4
      if: failure()
      #with:
      #  name: build-reports
      #  path: '**/build/reports/'
      run: echo "Upload Build Reports"
